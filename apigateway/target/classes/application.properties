server.port=8080
spring.application.name=apigateway

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
ribbon.eureka.enabled=true
#Zuul Properties
# http://localhost:8080/api/userms/users using prefix here
#zuul.prefix=/api
management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.exclude=*
zuul.routes.myms.path=/someresources/*
zuul.routes.myms.url=http://1.2.3.4:8001/resources
#ribbon.eureka.enabled=false
# ribbon without eureka below
#employees.ribbon.listOfServers=server1,server2,server3
#zuul.servletPath
#http://localhost:8080/actuator/routes is controlled by zuul.ignored-services
#zuul.ignored-services=orderms,userms,paymentms,oauth-server
zuul.routes.ordermsid.serviceId=orderms
zuul.routes.ordermsid.path=/dummy-orderms/**
#Required for oAuth2 Header - to get new token from oauth-server
zuul.routes.oauthserver.serviceId=oauth-server
zuul.routes.oauthserver.path=/oauth-server/**
# Path level sensitive headers. Excluding Authorization Header
zuul.routes.oauthserver.sensitiveHeaders=Cookie,Set-Cookie
# Global level Default sensitive headers. Not forwarded
#zuul.sensitiveHeaders=Cookie,Set-Cookie,Authorization
# Header values that should be discarded (both request and response)
# zuul.ignoredHeaders
# To not discard well known security headers in case Spring Security is on the classpath
# zuul.ignoreSecurityHeaders=false
# Zuul with Hystrix Fallback:
# https://cloud.spring.io/spring-cloud-netflix/multi/multi__router_and_filter_zuul.html
# https://cloud.spring.io/spring-cloud-static/Dalston.SR5/multi/multi__router_and_filter_zuul.html

#oAuth2
security.oauth2.resource.user-info-uri=http://oauth-server/user
security.oauth2.resource.loadBalanced=true
hystrix.shareSecurityContext=true

spring.zipkin.baseUrl=http://localhost:9411
# 100 % traces sent
spring.sleuth.sampler.percentage=1.0